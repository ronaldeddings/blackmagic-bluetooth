var f=Object.defineProperty;var u=(n,e,t)=>e in n?f(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t;var a=(n,e,t)=>u(n,typeof e!="symbol"?e+"":e,t);const E={GENERIC_ACCESS_PROFILE:{uuid:6144,name:"Generic Access Profile",verified:{littleEndian:{occurrences:6076,firstOffset:117159},bigEndian:{occurrences:3196,firstOffset:35808}}},GENERIC_ATTRIBUTE_PROFILE:{uuid:6145,name:"Generic Attribute Profile",verified:{littleEndian:{occurrences:2416,firstOffset:144400},bigEndian:{occurrences:3004,firstOffset:35008}}},DEVICE_INFORMATION_SERVICE:{uuid:6154,name:"Device Information Service",verified:{littleEndian:{occurrences:2263,firstOffset:19980},bigEndian:{occurrences:2287,firstOffset:196580}}},BATTERY_SERVICE:{uuid:6159,name:"Battery Service",verified:{littleEndian:{occurrences:2189,firstOffset:8747},bigEndian:{occurrences:2182,firstOffset:21635}}},HUMAN_INTERFACE_DEVICE:{uuid:6162,name:"Human Interface Device",verified:{littleEndian:{occurrences:2586,firstOffset:221803},bigEndian:{occurrences:2568,firstOffset:4020}}},AUDIO_SOURCE:{uuid:4362,name:"Audio Source",verified:{littleEndian:{occurrences:2069,firstOffset:8696},bigEndian:{occurrences:2472,firstOffset:209978}}},AUDIO_SINK:{uuid:4363,name:"Audio Sink",verified:{littleEndian:{occurrences:2332,firstOffset:143388},bigEndian:{occurrences:2058,firstOffset:21500}}},OBJECT_PUSH_PROFILE:{uuid:4357,name:"Object Push Profile",verified:{littleEndian:{occurrences:2763,firstOffset:41894},bigEndian:{occurrences:2401,firstOffset:24445}}},FILE_TRANSFER_PROFILE:{uuid:4358,name:"File Transfer Profile",verified:{littleEndian:{occurrences:2539,firstOffset:101819},bigEndian:{occurrences:2562,firstOffset:25843}}},NORDIC_DFU_SERVICE:{uuid:65113,name:"Nordic DFU Service",verified:{littleEndian:{occurrences:2566,firstOffset:56032},bigEndian:{occurrences:2134,firstOffset:31372}}}},l={HCI_RESET:{pattern:[1,3,12],name:"HCI Reset",verified:{occurrences:5,firstOffset:8894875,context:"3073E5AC01650B2F53D90CD985AA8AFA01030CB78FAAA1286ADD0D13D04D729F"}},HCI_SET_EVENT_MASK:{pattern:[1,5,12],name:"HCI Set Event Mask",verified:{occurrences:8,firstOffset:667247,context:"D976409D81CB529D83E0548CF54DB4A701050CF4F57C031D8776F2A41E24BE49"}},HCI_INQUIRY:{pattern:[1,1,12],name:"HCI Inquiry",verified:{occurrences:6,firstOffset:628784,context:"35DE008A2A7144CE5C1E4C26EBCE5B0001010CB8FFED23B1A8CB2418FDD9FA95"}},HCI_READ_BD_ADDR:{pattern:[1,9,12],name:"HCI Read BD_ADDR",verified:{occurrences:7,firstOffset:7792281,context:"63BA7723CB0A988B894316A8D3C010C801090CEF0461E78B66B3F93754B55783"}},HCI_CHANGE_LOCAL_NAME:{pattern:[1,19,12],name:"HCI Change Local Name",verified:{occurrences:16,firstOffset:4289798,context:"C5840A85982A1E2E333F41CF6D79DF3901130CD79E1DD4E535C7E1837492DCFD"}},HCI_WRITE_SCAN_ENABLE:{pattern:[1,26,12],name:"HCI Write Scan Enable",verified:{occurrences:11,firstOffset:9647605,context:"C7C99D8136B8DA3CA1F6639F8F0F32AE011A0C5A3FF1E680124A19427DCFB9F2"}},HCI_WRITE_CLASS_OF_DEVICE:{pattern:[1,35,12],name:"HCI Write Class of Device",verified:{occurrences:10,firstOffset:6072872,context:"A780235EDF45A1442F161E94A672500501230C4A61A15E39A9B078BFCC101F18"}},HCI_WRITE_SIMPLE_PAIRING_MODE:{pattern:[1,86,12],name:"HCI Write Simple Pairing Mode",verified:{occurrences:10,firstOffset:5291991,context:"8FD844B59D0C12D0880907612CCC015A01560CE422B116F01C58E7BAE1D74C66"}},HCI_WRITE_LE_HOST_SUPPORT:{pattern:[1,109,12],name:"HCI Write LE Host Support",verified:{occurrences:7,firstOffset:5202580,context:"AC2A1D23F06EF840683124BB54E5D3C8016D0C4B5DB63D4DB264B14CE67791EA"}}},s={GENERIC_ACCESS:"00001800-0000-1000-8000-00805f9b34fb",GENERIC_ATTRIBUTE:"00001801-0000-1000-8000-00805f9b34fb",DEVICE_INFORMATION:"0000180a-0000-1000-8000-00805f9b34fb",BATTERY_SERVICE:"0000180f-0000-1000-8000-00805f9b34fb",HID_SERVICE:"00001812-0000-1000-8000-00805f9b34fb",NORDIC_DFU:"0000fe59-0000-1000-8000-00805f9b34fb"},C={BLE:{occurrences:5,firstOffset:29483395,context:"fd9e98c75214606c56c39017bd25ceb24151a9fd424c451114b56bee9cca41da2178b512d0a134f66623b7"},GAP:{occurrences:11,firstOffset:6306267,context:"d33bd5f8b594249fc75fa3827cd0aa9640e117f54741503ff695befee427292565a5cb642d747dd1cd6a50"},HCI:{occurrences:9,firstOffset:21338073,context:"218ee93ddd58aedbe488c084cd24d368824f109d48434994871f4d46c64e83f25d1ee0e15fecad9050c0b1"},SDP:{occurrences:11,firstOffset:7703905,context:"e3825a975bbde3285f45cdb6d17ba473e39c370753445058034a16ed7deaeb08bff6a3900a112a86aac0bb"},ATT:{occurrences:5,firstOffset:43985601,context:"dcbc3eefd3ca41fd68b27b155d1855464ee54985415454f28d47ba467a7794be253fe87011e13b96c7497d"}};class h{constructor(){a(this,"device",null);a(this,"server",null);a(this,"connectionState",{connected:!1,connecting:!1,device:null,services:[],characteristics:new Map,error:null});a(this,"retryAttempts",3);a(this,"retryDelay",1e3);this.checkBrowserSupport()}checkBrowserSupport(){if(!navigator.bluetooth)throw new Error("Web Bluetooth is not supported in this browser. Please use Chrome/Edge with HTTPS.")}async requestDevice(){try{this.connectionState.connecting=!0,this.connectionState.error=null;const e=await navigator.bluetooth.requestDevice({acceptAllDevices:!0,optionalServices:[s.GENERIC_ACCESS,s.GENERIC_ATTRIBUTE,s.DEVICE_INFORMATION,s.BATTERY_SERVICE,s.HID_SERVICE,s.NORDIC_DFU,"0000180f-0000-1000-8000-00805f9b34fb","0000fe59-0000-1000-8000-00805f9b34fb","00001105-0000-1000-8000-00805f9b34fb","0000110a-0000-1000-8000-00805f9b34fb","0000110b-0000-1000-8000-00805f9b34fb","00001200-0000-1000-8000-00805f9b34fb","0000fffe-0000-1000-8000-00805f9b34fb","00000000-0000-1000-8000-00805f9b34fb"]});return this.device=e,this.connectionState.device=e,this.setupDeviceEventListeners(),{success:!0,data:e}}catch(e){const t=e instanceof Error?e.message:"Unknown error occurred";return this.connectionState.error=t,{success:!1,error:t}}finally{this.connectionState.connecting=!1}}async connect(){return this.device?this.executeWithRetry(async()=>{if(this.connectionState.connecting=!0,this.connectionState.error=null,!this.device.gatt)throw new Error("Device GATT server not available");return this.server=await this.device.gatt.connect(),this.connectionState.connected=!0,this.connectionState.connecting=!1,console.log("Connected to device:",this.device.name),{success:!0}}):{success:!1,error:"No device selected"}}async disconnect(){this.server&&this.server.connected&&this.server.disconnect(),this.connectionState.connected=!1,this.connectionState.connecting=!1,this.connectionState.services=[],this.connectionState.characteristics.clear(),console.log("Disconnected from device")}async discoverServices(){if(!this.server||!this.server.connected)return{success:!1,error:"Not connected to device"};try{const e=await this.server.getPrimaryServices(),t=[];this.connectionState.services=e;for(const r of e){const c=this.getServiceName(r.uuid),i=await this.discoverCharacteristics(r);t.push({serviceUuid:r.uuid,serviceName:c,characteristics:i})}return{success:!0,data:t}}catch(e){return{success:!1,error:e instanceof Error?e.message:"Service discovery failed"}}}async discoverCharacteristics(e){try{const t=await e.getCharacteristics(),r=[];for(const c of t){this.connectionState.characteristics.set(c.uuid,c);let i=null;if(c.properties.read)try{i=await c.readValue()}catch(o){console.warn(`Failed to read characteristic ${c.uuid}:`,o)}r.push({uuid:c.uuid,properties:Object.keys(c.properties).filter(o=>c.properties[o]),value:i})}return r}catch(t){return console.error("Failed to discover characteristics:",t),[]}}async readCharacteristic(e){const t=this.connectionState.characteristics.get(e);if(!t)return{success:!1,error:"Characteristic not found"};if(!t.properties.read)return{success:!1,error:"Characteristic is not readable"};try{return{success:!0,data:await t.readValue()}}catch(r){return{success:!1,error:r instanceof Error?r.message:"Read failed"}}}async writeCharacteristic(e,t){const r=this.connectionState.characteristics.get(e);if(!r)return{success:!1,error:"Characteristic not found"};if(!r.properties.write&&!r.properties.writeWithoutResponse)return{success:!1,error:"Characteristic is not writable"};try{return r.properties.writeWithoutResponse?await r.writeValueWithoutResponse(t):await r.writeValueWithResponse(t),{success:!0}}catch(c){return{success:!1,error:c instanceof Error?c.message:"Write failed"}}}async subscribeToNotifications(e,t){const r=this.connectionState.characteristics.get(e);if(!r)return{success:!1,error:"Characteristic not found"};if(!r.properties.notify&&!r.properties.indicate)return{success:!1,error:"Characteristic does not support notifications"};try{return await r.startNotifications(),r.addEventListener("characteristicvaluechanged",c=>{const i=c.target;i.value&&t(i.value)}),{success:!0}}catch(c){return{success:!1,error:c instanceof Error?c.message:"Subscription failed"}}}getConnectionState(){return{...this.connectionState}}setupDeviceEventListeners(){this.device&&this.device.addEventListener("gattserverdisconnected",()=>{console.log("Device disconnected"),this.connectionState.connected=!1,this.connectionState.connecting=!1})}async executeWithRetry(e){let t="Unknown error";for(let r=1;r<=this.retryAttempts;r++)try{return await e()}catch(c){t=c instanceof Error?c.message:"Operation failed",console.warn(`Attempt ${r} failed:`,t),r<this.retryAttempts&&await this.delay(this.retryDelay*r)}return this.connectionState.error=t,this.connectionState.connecting=!1,{success:!1,error:t}}getServiceName(e){return{[s.GENERIC_ACCESS]:"Generic Access Profile",[s.GENERIC_ATTRIBUTE]:"Generic Attribute Profile",[s.DEVICE_INFORMATION]:"Device Information Service",[s.BATTERY_SERVICE]:"Battery Service",[s.HID_SERVICE]:"Human Interface Device",[s.NORDIC_DFU]:"Nordic DFU Service"}[e]||`Unknown Service (${e})`}delay(e){return new Promise(t=>setTimeout(t,e))}isBlackmagicDevice(){if(!this.device||!this.device.name)return!1;const e=this.device.name.toLowerCase();return e.includes("blackmagic")||e.includes("bmd")||e.includes("ursa")||e.includes("pocket")}getDeviceInfo(){var e,t;return{id:((e=this.device)==null?void 0:e.id)||"Unknown",name:((t=this.device)==null?void 0:t.name)||"Unknown Device",connected:this.connectionState.connected,services:this.connectionState.services.length,characteristics:this.connectionState.characteristics.size}}}export{E as V,h as W,l as a,C as b};
//# sourceMappingURL=bluetooth-DyS4SozQ.js.map
