{"version":3,"file":"index-_ENdEnRU.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../node_modules/react-dom/client.js","../../src/components/DeviceScanner.tsx","../../src/components/ConnectionManager.tsx","../../src/services/analysis/SecurityAnalyzer.ts","../../src/services/analysis/FirmwareAnalyzer.ts","../../src/utils/dataProcessing.ts","../../src/components/ServiceExplorer.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","import React, { useState, useCallback } from 'react';\nimport { WebBluetoothAdapter } from '@/services/bluetooth';\nimport type { BluetoothDevice, BluetoothOperationResult } from '@/types';\nimport './DeviceScanner.css';\n\ninterface DeviceScannerProps {\n  onDeviceSelected: (device: BluetoothDevice) => void;\n  isScanning: boolean;\n  onScanStateChange: (scanning: boolean) => void;\n}\n\nexport const DeviceScanner: React.FC<DeviceScannerProps> = ({\n  onDeviceSelected,\n  isScanning,\n  onScanStateChange\n}) => {\n  const [availableDevices, setAvailableDevices] = useState<BluetoothDevice[]>([]);\n  const [error, setError] = useState<string | null>(null);\n  const [adapter] = useState(() => new WebBluetoothAdapter());\n\n  const handleScan = useCallback(async () => {\n    setError(null);\n    onScanStateChange(true);\n\n    try {\n      const result: BluetoothOperationResult<BluetoothDevice> = await adapter.requestDevice();\n      \n      if (result.success && result.data) {\n        const device = result.data;\n        setAvailableDevices(prev => {\n          const exists = prev.find(d => d.id === device.id);\n          return exists ? prev : [...prev, device];\n        });\n        onDeviceSelected(device);\n      } else {\n        setError(result.error || 'Device scan failed');\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Unknown scanning error');\n    } finally {\n      onScanStateChange(false);\n    }\n  }, [adapter, onDeviceSelected, onScanStateChange]);\n\n  const handleDeviceSelect = useCallback((device: BluetoothDevice) => {\n    onDeviceSelected(device);\n  }, [onDeviceSelected]);\n\n  const clearError = useCallback(() => {\n    setError(null);\n  }, []);\n\n  return (\n    <div className=\"device-scanner\">\n      <div className=\"scanner-header\">\n        <h2>Blackmagic Device Scanner</h2>\n        <button \n          className={`scan-button ${isScanning ? 'scanning' : ''}`}\n          onClick={handleScan}\n          disabled={isScanning}\n        >\n          {isScanning ? (\n            <>\n              <span className=\"spinner\"></span>\n              Scanning...\n            </>\n          ) : (\n            <>\n              <span className=\"scan-icon\">üì°</span>\n              Scan for Devices\n            </>\n          )}\n        </button>\n      </div>\n\n      {error && (\n        <div className=\"error-message\">\n          <span className=\"error-icon\">‚ö†Ô∏è</span>\n          <span className=\"error-text\">{error}</span>\n          <button className=\"error-dismiss\" onClick={clearError}>√ó</button>\n        </div>\n      )}\n\n      {availableDevices.length > 0 && (\n        <div className=\"device-list\">\n          <h3>Available Devices</h3>\n          {availableDevices.map(device => (\n            <div \n              key={device.id}\n              className=\"device-item\"\n              onClick={() => handleDeviceSelect(device)}\n            >\n              <div className=\"device-info\">\n                <div className=\"device-name\">\n                  {device.name || 'Unnamed Device'}\n                </div>\n                <div className=\"device-id\">\n                  ID: {device.id}\n                </div>\n                {device.gatt?.connected && (\n                  <div className=\"device-status connected\">\n                    Connected\n                  </div>\n                )}\n              </div>\n              <div className=\"device-actions\">\n                <button className=\"select-button\">\n                  Select\n                </button>\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n\n      {!isScanning && availableDevices.length === 0 && (\n        <div className=\"empty-state\">\n          <div className=\"empty-icon\">üîç</div>\n          <p>No devices found. Click \"Scan for Devices\" to search for Bluetooth devices.</p>\n          <div className=\"tips\">\n            <h4>Tips:</h4>\n            <ul>\n              <li>Make sure your Bluetooth device is powered on and discoverable</li>\n              <li>Enable Bluetooth pairing mode on your device</li>\n              <li>Ensure you're using a supported browser (Chrome/Edge with HTTPS)</li>\n              <li>Check that Web Bluetooth is enabled in your browser settings</li>\n              <li>For Blackmagic cameras, enable Bluetooth in camera settings</li>\n            </ul>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};","import React, { useState, useCallback, useEffect } from 'react';\nimport { WebBluetoothAdapter } from '@/services/bluetooth';\nimport type { BluetoothDevice, DeviceConnectionState, ServiceDiscoveryResult, BluetoothOperationResult } from '@/types';\nimport './ConnectionManager.css';\n\ninterface ConnectionManagerProps {\n  device: BluetoothDevice | null;\n  onConnectionStateChange: (state: DeviceConnectionState) => void;\n  onServicesDiscovered: (services: ServiceDiscoveryResult[]) => void;\n}\n\nexport const ConnectionManager: React.FC<ConnectionManagerProps> = ({\n  device,\n  onConnectionStateChange,\n  onServicesDiscovered\n}) => {\n  const [connectionState, setConnectionState] = useState<DeviceConnectionState>({\n    connected: false,\n    connecting: false,\n    device: null,\n    services: [],\n    characteristics: new Map(),\n    error: null\n  });\n  const [adapter] = useState(() => new WebBluetoothAdapter());\n  const [discoveryProgress, setDiscoveryProgress] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (device) {\n      setConnectionState(prev => ({\n        ...prev,\n        device,\n        error: null\n      }));\n    }\n  }, [device]);\n\n  useEffect(() => {\n    onConnectionStateChange(connectionState);\n  }, [connectionState, onConnectionStateChange]);\n\n  const handleConnect = useCallback(async () => {\n    if (!device) return;\n\n    setConnectionState(prev => ({\n      ...prev,\n      connecting: true,\n      error: null\n    }));\n\n    try {\n      const connectResult: BluetoothOperationResult<void> = await adapter.connect();\n      \n      if (connectResult.success) {\n        setConnectionState(prev => ({\n          ...prev,\n          connected: true,\n          connecting: false\n        }));\n\n        setDiscoveryProgress('Discovering services...');\n        \n        const servicesResult: BluetoothOperationResult<ServiceDiscoveryResult[]> = \n          await adapter.discoverServices();\n        \n        if (servicesResult.success && servicesResult.data) {\n          setConnectionState(prev => ({\n            ...prev,\n            services: servicesResult.data?.map(() => ({} as BluetoothRemoteGATTService)) || []\n          }));\n          \n          onServicesDiscovered(servicesResult.data);\n          setDiscoveryProgress(null);\n        } else {\n          setConnectionState(prev => ({\n            ...prev,\n            error: servicesResult.error || 'Service discovery failed'\n          }));\n          setDiscoveryProgress(null);\n        }\n      } else {\n        setConnectionState(prev => ({\n          ...prev,\n          connecting: false,\n          error: connectResult.error || 'Connection failed'\n        }));\n      }\n    } catch (error) {\n      setConnectionState(prev => ({\n        ...prev,\n        connecting: false,\n        error: error instanceof Error ? error.message : 'Connection error'\n      }));\n      setDiscoveryProgress(null);\n    }\n  }, [device, adapter, onServicesDiscovered]);\n\n  const handleDisconnect = useCallback(async () => {\n    try {\n      await adapter.disconnect();\n      setConnectionState(prev => ({\n        ...prev,\n        connected: false,\n        connecting: false,\n        services: [],\n        characteristics: new Map(),\n        error: null\n      }));\n      setDiscoveryProgress(null);\n    } catch (error) {\n      console.error('Disconnect error:', error);\n    }\n  }, [adapter]);\n\n  const clearError = useCallback(() => {\n    setConnectionState(prev => ({\n      ...prev,\n      error: null\n    }));\n  }, []);\n\n  if (!device) {\n    return (\n      <div className=\"connection-manager\">\n        <div className=\"no-device\">\n          <div className=\"no-device-icon\">üì±</div>\n          <p>No device selected</p>\n          <small>Please scan for and select a Blackmagic device first</small>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"connection-manager\">\n      <div className=\"connection-header\">\n        <h3>Device Connection</h3>\n        <div className={`connection-status ${connectionState.connected ? 'connected' : connectionState.connecting ? 'connecting' : 'disconnected'}`}>\n          {connectionState.connected ? 'üü¢ Connected' : \n           connectionState.connecting ? 'üü° Connecting...' : \n           'üî¥ Disconnected'}\n        </div>\n      </div>\n\n      <div className=\"device-details\">\n        <div className=\"device-info\">\n          <h4>{device.name || 'Unnamed Device'}</h4>\n          <div className=\"device-meta\">\n            <span className=\"device-id\">ID: {device.id}</span>\n            {device.gatt && (\n              <span className=\"gatt-status\">\n                GATT: {device.gatt.connected ? 'Connected' : 'Disconnected'}\n              </span>\n            )}\n          </div>\n        </div>\n\n        <div className=\"connection-actions\">\n          {!connectionState.connected && !connectionState.connecting && (\n            <button \n              className=\"connect-button primary\"\n              onClick={handleConnect}\n            >\n              Connect\n            </button>\n          )}\n          \n          {connectionState.connecting && (\n            <button className=\"connect-button connecting\" disabled>\n              <span className=\"spinner\"></span>\n              Connecting...\n            </button>\n          )}\n          \n          {connectionState.connected && (\n            <button \n              className=\"connect-button disconnect\"\n              onClick={handleDisconnect}\n            >\n              Disconnect\n            </button>\n          )}\n        </div>\n      </div>\n\n      {connectionState.error && (\n        <div className=\"error-message\">\n          <span className=\"error-icon\">‚ö†Ô∏è</span>\n          <span className=\"error-text\">{connectionState.error}</span>\n          <button className=\"error-dismiss\" onClick={clearError}>√ó</button>\n        </div>\n      )}\n\n      {discoveryProgress && (\n        <div className=\"discovery-progress\">\n          <div className=\"progress-info\">\n            <span className=\"progress-icon\">üîç</span>\n            <span>{discoveryProgress}</span>\n          </div>\n          <div className=\"progress-bar\">\n            <div className=\"progress-fill\"></div>\n          </div>\n        </div>\n      )}\n\n      {connectionState.connected && connectionState.services.length > 0 && (\n        <div className=\"connection-summary\">\n          <div className=\"summary-item\">\n            <span className=\"summary-label\">Services Discovered:</span>\n            <span className=\"summary-value\">{connectionState.services.length}</span>\n          </div>\n          <div className=\"summary-item\">\n            <span className=\"summary-label\">Characteristics:</span>\n            <span className=\"summary-value\">{connectionState.characteristics.size}</span>\n          </div>\n        </div>\n      )}\n\n      {connectionState.connected && (\n        <div className=\"connection-tips\">\n          <h4>Connected Successfully!</h4>\n          <ul>\n            <li>‚úÖ Device is now connected and ready</li>\n            <li>üîç Services have been discovered automatically</li>\n            <li>üìä You can now view security analysis and firmware information</li>\n            <li>‚öôÔ∏è Advanced features are available in the device control panel</li>\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};","import { VERIFIED_SERVICE_UUIDS } from '../bluetooth/constants';\nimport type { SecurityAssessment, BluetoothServiceUUID } from '@/types';\n\nexport class SecurityAnalyzer {\n  private static instance: SecurityAnalyzer;\n  private riskThresholds = {\n    critical: ['Nordic DFU Service', 'File Transfer Profile'],\n    high: ['Human Interface Device', 'Object Push Profile', 'Audio Source'],\n    medium: ['Generic Access Profile', 'Generic Attribute Profile', 'Device Information Service', 'Audio Sink'],\n    low: ['Battery Service']\n  };\n\n  private constructor() {}\n\n  static getInstance(): SecurityAnalyzer {\n    if (!SecurityAnalyzer.instance) {\n      SecurityAnalyzer.instance = new SecurityAnalyzer();\n    }\n    return SecurityAnalyzer.instance;\n  }\n\n  /**\n   * Generate comprehensive security assessment\n   */\n  generateSecurityAssessment(services: BluetoothRemoteGATTService[]): SecurityAssessment {\n    const serviceNames = services.map(s => this.getServiceName(s.uuid));\n    const riskLevels = this.assessServiceRisks(serviceNames);\n    \n    const highestRisk = this.determineHighestRisk(riskLevels);\n    const recommendations = this.generateRecommendations(serviceNames, riskLevels);\n\n    return {\n      riskLevel: highestRisk,\n      services: serviceNames,\n      recommendations\n    };\n  }\n\n  /**\n   * Assess risks for individual services\n   */\n  private assessServiceRisks(serviceNames: string[]): Record<string, 'Critical' | 'High' | 'Medium' | 'Low'> {\n    const risks: Record<string, 'Critical' | 'High' | 'Medium' | 'Low'> = {};\n\n    serviceNames.forEach(serviceName => {\n      if (this.riskThresholds.critical.some(critical => serviceName.includes(critical))) {\n        risks[serviceName] = 'Critical';\n      } else if (this.riskThresholds.high.some(high => serviceName.includes(high))) {\n        risks[serviceName] = 'High';\n      } else if (this.riskThresholds.medium.some(medium => serviceName.includes(medium))) {\n        risks[serviceName] = 'Medium';\n      } else {\n        risks[serviceName] = 'Low';\n      }\n    });\n\n    return risks;\n  }\n\n  /**\n   * Determine the highest risk level from all services\n   */\n  private determineHighestRisk(risks: Record<string, 'Critical' | 'High' | 'Medium' | 'Low'>): 'Critical' | 'High' | 'Medium' | 'Low' {\n    const riskValues = Object.values(risks);\n    \n    if (riskValues.includes('Critical')) return 'Critical';\n    if (riskValues.includes('High')) return 'High';\n    if (riskValues.includes('Medium')) return 'Medium';\n    return 'Low';\n  }\n\n  /**\n   * Generate security recommendations based on discovered services\n   */\n  private generateRecommendations(\n    serviceNames: string[], \n    risks: Record<string, 'Critical' | 'High' | 'Medium' | 'Low'>\n  ): string[] {\n    const recommendations: string[] = [];\n\n    // Check for critical services\n    const hasDFU = serviceNames.some(name => name.includes('DFU'));\n    const hasFileTransfer = serviceNames.some(name => name.includes('File Transfer'));\n    const hasHID = serviceNames.some(name => name.includes('Human Interface'));\n    const hasObjectPush = serviceNames.some(name => name.includes('Object Push'));\n    const hasAudioSource = serviceNames.some(name => name.includes('Audio Source'));\n\n    if (hasDFU) {\n      recommendations.push('üö® CRITICAL: Nordic DFU Service detected - Firmware modification possible');\n      recommendations.push('üìã Monitor all DFU operations and implement access controls');\n      recommendations.push('üîí Consider disabling DFU service when not actively updating firmware');\n    }\n\n    if (hasFileTransfer) {\n      recommendations.push('üö® CRITICAL: File Transfer Profile detected - File system access possible');\n      recommendations.push('üìã Implement strict file access controls and validation');\n      recommendations.push('üîç Monitor all file transfer operations for suspicious activity');\n    }\n\n    if (hasHID) {\n      recommendations.push('‚ö†Ô∏è HIGH RISK: Human Interface Device service - Remote control capability');\n      recommendations.push('üìã Implement user confirmation for critical camera operations');\n      recommendations.push('üîê Consider implementing operation timeouts and session limits');\n    }\n\n    if (hasObjectPush) {\n      recommendations.push('‚ö†Ô∏è HIGH RISK: Object Push Profile - File upload capability detected');\n      recommendations.push('üìã Validate all uploaded files and scan for malicious content');\n      recommendations.push('üíæ Implement file size limits and type restrictions');\n    }\n\n    if (hasAudioSource) {\n      recommendations.push('‚ö†Ô∏è HIGH RISK: Audio Source service - Microphone access for surveillance');\n      recommendations.push('üìã Monitor audio streaming sessions and implement privacy controls');\n      recommendations.push('üîá Provide clear indicators when audio is being accessed');\n    }\n\n    // General recommendations\n    recommendations.push('üìä Regularly audit Bluetooth connections and active services');\n    recommendations.push('üîÑ Keep firmware updated to patch known vulnerabilities');\n    recommendations.push('üìù Maintain logs of all Bluetooth operations for security analysis');\n    \n    if (risks['Critical'] || risks['High']) {\n      recommendations.push('üö´ Disable Bluetooth when not actively needed');\n      recommendations.push('üõ°Ô∏è Implement network segmentation for camera devices');\n    }\n\n    return recommendations;\n  }\n\n  /**\n   * Get detailed risk analysis for a specific service\n   */\n  analyzeServiceSecurity(serviceUuid: string) {\n    const serviceName = this.getServiceName(serviceUuid);\n    const service = Object.values(VERIFIED_SERVICE_UUIDS).find(s => \n      this.formatUuidForWebBluetooth(s.uuid) === serviceUuid\n    );\n\n    if (!service) {\n      return {\n        serviceName,\n        riskLevel: 'Low' as const,\n        threats: ['Unknown service - limited threat assessment available'],\n        mitigations: ['Monitor service usage', 'Disable if not needed']\n      };\n    }\n\n    return this.getServiceThreatProfile(service);\n  }\n\n  /**\n   * Get threat profile for a specific service\n   */\n  private getServiceThreatProfile(service: BluetoothServiceUUID) {\n    const serviceName = service.name;\n    let riskLevel: 'Critical' | 'High' | 'Medium' | 'Low' = 'Low';\n    const threats: string[] = [];\n    const mitigations: string[] = [];\n\n    switch (serviceName) {\n      case 'Nordic DFU Service':\n        riskLevel = 'Critical';\n        threats.push(\n          'Firmware replacement and modification',\n          'Bootloader compromise',\n          'Persistent backdoor installation',\n          'Device bricking through malformed updates'\n        );\n        mitigations.push(\n          'Implement cryptographic signature verification',\n          'Use secure boot process',\n          'Restrict DFU access to authenticated users only',\n          'Maintain firmware rollback capability'\n        );\n        break;\n\n      case 'File Transfer Profile':\n        riskLevel = 'Critical';\n        threats.push(\n          'Unauthorized file system access',\n          'Data exfiltration',\n          'Malicious file injection',\n          'Storage exhaustion attacks'\n        );\n        mitigations.push(\n          'Implement strict file access controls',\n          'Validate all file operations',\n          'Use sandboxed file access',\n          'Monitor file system operations'\n        );\n        break;\n\n      case 'Human Interface Device':\n        riskLevel = 'High';\n        threats.push(\n          'Unauthorized camera control',\n          'Recording manipulation',\n          'Settings modification',\n          'Remote operation without user consent'\n        );\n        mitigations.push(\n          'Require user confirmation for critical operations',\n          'Implement operation logging',\n          'Use session timeouts',\n          'Provide visual indicators for remote control'\n        );\n        break;\n\n      case 'Object Push Profile':\n        riskLevel = 'High';\n        threats.push(\n          'Malicious file uploads',\n          'Storage space exhaustion',\n          'Configuration file manipulation',\n          'Script injection attacks'\n        );\n        mitigations.push(\n          'Validate file types and content',\n          'Implement file size limits',\n          'Scan uploads for malicious content',\n          'Use secure file handling practices'\n        );\n        break;\n\n      case 'Audio Source':\n        riskLevel = 'High';\n        threats.push(\n          'Unauthorized microphone access',\n          'Audio surveillance',\n          'Privacy violations',\n          'Covert recording'\n        );\n        mitigations.push(\n          'Provide clear audio access indicators',\n          'Implement user consent mechanisms',\n          'Monitor audio streaming sessions',\n          'Allow user to disable audio access'\n        );\n        break;\n\n      case 'Generic Access Profile':\n      case 'Generic Attribute Profile':\n      case 'Device Information Service':\n        riskLevel = 'Medium';\n        threats.push(\n          'Device fingerprinting',\n          'Information disclosure',\n          'Connection manipulation'\n        );\n        mitigations.push(\n          'Limit exposed device information',\n          'Monitor connection attempts',\n          'Implement rate limiting'\n        );\n        break;\n\n      default:\n        riskLevel = 'Low';\n        threats.push('Standard service with minimal security risk');\n        mitigations.push('Follow standard Bluetooth security practices');\n    }\n\n    return {\n      serviceName,\n      riskLevel,\n      threats,\n      mitigations,\n      occurrences: service.verified.littleEndian.occurrences + service.verified.bigEndian.occurrences\n    };\n  }\n\n  /**\n   * Generate security audit report\n   */\n  generateAuditReport(services: BluetoothRemoteGATTService[]) {\n    const assessment = this.generateSecurityAssessment(services);\n    const serviceDetails = services.map(s => this.analyzeServiceSecurity(s.uuid));\n    \n    const criticalServices = serviceDetails.filter(s => s.riskLevel === 'Critical');\n    const highRiskServices = serviceDetails.filter(s => s.riskLevel === 'High');\n    const mediumRiskServices = serviceDetails.filter(s => s.riskLevel === 'Medium');\n    const lowRiskServices = serviceDetails.filter(s => s.riskLevel === 'Low');\n\n    return {\n      summary: assessment,\n      serviceBreakdown: {\n        critical: criticalServices,\n        high: highRiskServices,\n        medium: mediumRiskServices,\n        low: lowRiskServices\n      },\n      totalServices: services.length,\n      riskDistribution: {\n        critical: criticalServices.length,\n        high: highRiskServices.length,\n        medium: mediumRiskServices.length,\n        low: lowRiskServices.length\n      },\n      overallRisk: assessment.riskLevel,\n      generatedAt: new Date().toISOString()\n    };\n  }\n\n  /**\n   * Check if operation should require additional security measures\n   */\n  requiresSecurityConfirmation(serviceUuid: string, operation: string): boolean {\n    const serviceName = this.getServiceName(serviceUuid);\n    \n    // Always require confirmation for critical services\n    if (this.riskThresholds.critical.some(critical => serviceName.includes(critical))) {\n      return true;\n    }\n\n    // Require confirmation for high-risk operations on high-risk services\n    if (this.riskThresholds.high.some(high => serviceName.includes(high))) {\n      const highRiskOperations = ['write', 'execute', 'upload', 'download', 'control'];\n      return highRiskOperations.some(op => operation.toLowerCase().includes(op));\n    }\n\n    return false;\n  }\n\n  /**\n   * Format UUID for Web Bluetooth API\n   */\n  private formatUuidForWebBluetooth(uuid: number): string {\n    const hex = uuid.toString(16).padStart(4, '0');\n    return `0000${hex}-0000-1000-8000-00805f9b34fb`;\n  }\n\n  /**\n   * Get service name from UUID\n   */\n  private getServiceName(uuid: string): string {\n    const serviceMap: Record<string, string> = {\n      '00001800-0000-1000-8000-00805f9b34fb': 'Generic Access Profile',\n      '00001801-0000-1000-8000-00805f9b34fb': 'Generic Attribute Profile',\n      '0000180a-0000-1000-8000-00805f9b34fb': 'Device Information Service',\n      '0000180f-0000-1000-8000-00805f9b34fb': 'Battery Service',\n      '00001812-0000-1000-8000-00805f9b34fb': 'Human Interface Device',\n      '0000110a-0000-1000-8000-00805f9b34fb': 'Audio Source',\n      '0000110b-0000-1000-8000-00805f9b34fb': 'Audio Sink',\n      '00001105-0000-1000-8000-00805f9b34fb': 'Object Push Profile',\n      '00001106-0000-1000-8000-00805f9b34fb': 'File Transfer Profile',\n      '0000fe59-0000-1000-8000-00805f9b34fb': 'Nordic DFU Service'\n    };\n\n    return serviceMap[uuid] || `Unknown Service (${uuid})`;\n  }\n}","import { VERIFIED_SERVICE_UUIDS, VERIFIED_HCI_COMMANDS, VERIFIED_BLUETOOTH_SIGNATURES } from '../bluetooth/constants';\nimport type { FirmwareAnalysis, MemoryAnalysis, BluetoothServiceUUID } from '@/types';\n\nexport class FirmwareAnalyzer {\n  private static instance: FirmwareAnalyzer;\n  private analysisCache = new Map<string, FirmwareAnalysis>();\n\n  private constructor() {}\n\n  static getInstance(): FirmwareAnalyzer {\n    if (!FirmwareAnalyzer.instance) {\n      FirmwareAnalyzer.instance = new FirmwareAnalyzer();\n    }\n    return FirmwareAnalyzer.instance;\n  }\n\n  /**\n   * Analyze firmware based on discovered services and characteristics\n   */\n  async analyzeFirmware(services: BluetoothRemoteGATTService[]): Promise<FirmwareAnalysis> {\n    const cacheKey = services.map(s => s.uuid).sort().join(',');\n    \n    if (this.analysisCache.has(cacheKey)) {\n      return this.analysisCache.get(cacheKey)!;\n    }\n\n    const analysis: FirmwareAnalysis = {\n      version: await this.detectFirmwareVersion(services),\n      updateCapable: this.detectUpdateCapability(services),\n      otaPatterns: this.countOTAPatterns(),\n      dfuPatterns: this.countDFUPatterns(),\n      totalOccurrences: this.calculateTotalOccurrences()\n    };\n\n    this.analysisCache.set(cacheKey, analysis);\n    return analysis;\n  }\n\n  /**\n   * Detect firmware version from device information service\n   */\n  private async detectFirmwareVersion(services: BluetoothRemoteGATTService[]): Promise<string | null> {\n    const deviceInfoService = services.find(s => \n      s.uuid === '0000180a-0000-1000-8000-00805f9b34fb'\n    );\n\n    if (!deviceInfoService) {\n      return null;\n    }\n\n    try {\n      const characteristics = await deviceInfoService.getCharacteristics();\n      const firmwareChar = characteristics.find(c => \n        c.uuid === '00002a26-0000-1000-8000-00805f9b34fb'\n      );\n\n      if (firmwareChar && firmwareChar.properties.read) {\n        const value = await firmwareChar.readValue();\n        const decoder = new TextDecoder();\n        return decoder.decode(value);\n      }\n    } catch (error) {\n      console.warn('Failed to read firmware version:', error);\n    }\n\n    return null;\n  }\n\n  /**\n   * Detect if device supports firmware updates\n   */\n  private detectUpdateCapability(services: BluetoothRemoteGATTService[]): boolean {\n    // Check for Nordic DFU service\n    const dfuService = services.find(s => \n      s.uuid === '0000fe59-0000-1000-8000-00805f9b34fb'\n    );\n\n    return !!dfuService;\n  }\n\n  /**\n   * Count OTA patterns based on firmware analysis\n   */\n  private countOTAPatterns(): number {\n    // From firmware analysis: 13 occurrences at 0x001C9310\n    return 13;\n  }\n\n  /**\n   * Count DFU patterns based on firmware analysis\n   */\n  private countDFUPatterns(): number {\n    // From firmware analysis: 9 occurrences at 0x0014DB75\n    return 9;\n  }\n\n  /**\n   * Calculate total verified occurrences across all services\n   */\n  private calculateTotalOccurrences(): number {\n    let total = 0;\n    \n    // Add service occurrences\n    Object.values(VERIFIED_SERVICE_UUIDS).forEach(service => {\n      total += service.verified.littleEndian.occurrences;\n      total += service.verified.bigEndian.occurrences;\n    });\n\n    // Add HCI command occurrences\n    Object.values(VERIFIED_HCI_COMMANDS).forEach(command => {\n      total += command.verified.occurrences;\n    });\n\n    // Add protocol signature occurrences\n    Object.values(VERIFIED_BLUETOOTH_SIGNATURES).forEach(signature => {\n      total += signature.occurrences;\n    });\n\n    return total;\n  }\n\n  /**\n   * Analyze memory patterns and create memory analysis\n   */\n  createMemoryAnalysis(): MemoryAnalysis[] {\n    const memoryAnalyses: MemoryAnalysis[] = [];\n\n    // Generic Access Profile analysis\n    memoryAnalyses.push({\n      offset: 0x0001c9a7,\n      hexContext: '06006B3591A3EA050000EA0500007C2E0DA7DADC00E04C602A580800450005DC00184000FF06BB69A9FE10F2A9FE55ABEBFF00509BD1794175DDC23F50101000',\n      asciiContext: '..k5..........|.......L`*X..E.....@....i......U....P..yAu..?P...',\n      serviceType: 'Generic Access Profile'\n    });\n\n    // HCI Set Event Mask analysis\n    memoryAnalyses.push({\n      offset: 0x000A2E6F,\n      hexContext: '75DDC23F50101000CD7D0000A8667A81D976409D81CB529D83E0548CF54DB4A701050CF4F57C031D8776F2A41E24BE49514109137A3DBC4FEC73F36FC0A6F093',\n      asciiContext: 'u..?P....}...fz..v@...R...T..M.......|...v...$.IQA..z=.O.s.o....',\n      serviceType: 'HCI Command Layer'\n    });\n\n    // OTA Analysis\n    memoryAnalyses.push({\n      offset: 0x001C9310,\n      hexContext: '95DFB3AD6815D3DCF7861538B2841A14106FF2AC5E0BA4421A4384EE251138C94F54415D78BD037DD22748629D74587FAA20E13AD69E4CA8CA5F8BA33C9521A8',\n      asciiContext: '....h......8.....o..^..B.C..%.8.OTA]x..}.(Hb.tX.. .:..L.._..<.!.',\n      serviceType: 'Firmware Update (OTA)'\n    });\n\n    // Nordic DFU Service analysis\n    memoryAnalyses.push({\n      offset: 0x0000dae0,\n      hexContext: '694E76198AAEC938C9D1DD706AF77FA79C7320D4F1AF328A67E5C318EF26C86059FE9FFF067A20896B527D3FFE25CBBA251B29B1E8FDC42485EDF6002DE98479',\n      asciiContext: 'iNv....8...pj....s ...2.g....&.`Y....z .kR}?.%..%.)....$....-..y',\n      serviceType: 'Nordic DFU Service'\n    });\n\n    return memoryAnalyses;\n  }\n\n  /**\n   * Analyze service patterns for security assessment\n   */\n  analyzeServicePatterns(services: BluetoothRemoteGATTService[]) {\n    const patterns = {\n      discoveredServices: services.map(s => ({\n        uuid: s.uuid,\n        name: this.getServiceName(s.uuid),\n        present: true\n      })),\n      expectedServices: Object.values(VERIFIED_SERVICE_UUIDS).map(s => ({\n        uuid: this.formatUuidForWebBluetooth(s.uuid),\n        name: s.name,\n        occurrences: s.verified.littleEndian.occurrences + s.verified.bigEndian.occurrences\n      })),\n      matchRate: 0\n    };\n\n    // Calculate match rate\n    const discoveredUuids = new Set(services.map(s => s.uuid));\n    const expectedUuids = patterns.expectedServices.map(s => s.uuid);\n    const matches = expectedUuids.filter(uuid => discoveredUuids.has(uuid));\n    patterns.matchRate = (matches.length / expectedUuids.length) * 100;\n\n    return patterns;\n  }\n\n  /**\n   * Get detailed service information\n   */\n  getServiceDetails(serviceUuid: string) {\n    const service = Object.values(VERIFIED_SERVICE_UUIDS).find(s => \n      this.formatUuidForWebBluetooth(s.uuid) === serviceUuid\n    );\n\n    if (!service) {\n      return null;\n    }\n\n    return {\n      name: service.name,\n      uuid: service.uuid,\n      webBluetoothUuid: serviceUuid,\n      verified: service.verified,\n      totalOccurrences: service.verified.littleEndian.occurrences + service.verified.bigEndian.occurrences,\n      riskAssessment: this.assessServiceRisk(service)\n    };\n  }\n\n  /**\n   * Assess risk level of a service\n   */\n  private assessServiceRisk(service: BluetoothServiceUUID) {\n    const totalOccurrences = service.verified.littleEndian.occurrences + service.verified.bigEndian.occurrences;\n\n    // Critical risk services\n    if (service.name.includes('DFU') || service.name.includes('File Transfer')) {\n      return 'Critical';\n    }\n\n    // High risk services\n    if (service.name.includes('Human Interface') || \n        service.name.includes('Object Push') ||\n        service.name.includes('Audio Source')) {\n      return 'High';\n    }\n\n    // Medium risk based on occurrence count\n    if (totalOccurrences > 4000) {\n      return 'Medium';\n    }\n\n    return 'Low';\n  }\n\n  /**\n   * Format UUID for Web Bluetooth API\n   */\n  private formatUuidForWebBluetooth(uuid: number): string {\n    const hex = uuid.toString(16).padStart(4, '0');\n    return `0000${hex}-0000-1000-8000-00805f9b34fb`;\n  }\n\n  /**\n   * Get service name from UUID\n   */\n  private getServiceName(uuid: string): string {\n    const serviceMap: Record<string, string> = {\n      '00001800-0000-1000-8000-00805f9b34fb': 'Generic Access Profile',\n      '00001801-0000-1000-8000-00805f9b34fb': 'Generic Attribute Profile',\n      '0000180a-0000-1000-8000-00805f9b34fb': 'Device Information Service',\n      '0000180f-0000-1000-8000-00805f9b34fb': 'Battery Service',\n      '00001812-0000-1000-8000-00805f9b34fb': 'Human Interface Device',\n      '0000fe59-0000-1000-8000-00805f9b34fb': 'Nordic DFU Service'\n    };\n\n    return serviceMap[uuid] || `Unknown Service (${uuid})`;\n  }\n\n  /**\n   * Clear analysis cache\n   */\n  clearCache(): void {\n    this.analysisCache.clear();\n  }\n}","import type { \n  ServiceDiscoveryResult,\n  ProcessedServiceData,\n  FirmwareAnalysisResult \n} from '@/types';\n\nexport class DataProcessor {\n  private static instance: DataProcessor;\n\n  private constructor() {}\n\n  static getInstance(): DataProcessor {\n    if (!DataProcessor.instance) {\n      DataProcessor.instance = new DataProcessor();\n    }\n    return DataProcessor.instance;\n  }\n\n  processDiscoveredServices(services: ServiceDiscoveryResult[]): ProcessedServiceData[] {\n    return services.map(service => ({\n      uuid: service.serviceUuid,\n      name: service.serviceName,\n      characteristics: service.characteristics.map(char => ({\n        uuid: char.uuid,\n        properties: char.properties,\n        value: char.value ? this.parseCharacteristicValue(char.value) : null,\n        readable: char.properties.includes('read'),\n        writable: char.properties.includes('write') || char.properties.includes('writeWithoutResponse'),\n        notifiable: char.properties.includes('notify') || char.properties.includes('indicate')\n      })),\n      riskLevel: this.assessServiceRisk(service.serviceName),\n      verificationStatus: this.verifyServicePattern(service.serviceUuid)\n    }));\n  }\n\n  private parseCharacteristicValue(value: DataView): any {\n    try {\n      const bytes = new Uint8Array(value.buffer);\n      \n      if (bytes.length === 0) return null;\n      \n      if (this.isUtf8String(bytes)) {\n        return new TextDecoder().decode(bytes);\n      }\n      \n      if (bytes.length === 1) {\n        return bytes[0];\n      }\n      \n      if (bytes.length === 2) {\n        return value.getUint16(0, true);\n      }\n      \n      if (bytes.length === 4) {\n        return value.getUint32(0, true);\n      }\n      \n      return Array.from(bytes).map(b => `0x${b.toString(16).padStart(2, '0')}`).join(' ');\n    } catch (error) {\n      console.warn('Failed to parse characteristic value:', error);\n      return null;\n    }\n  }\n\n  private isUtf8String(bytes: Uint8Array): boolean {\n    try {\n      const decoded = new TextDecoder('utf-8', { fatal: true }).decode(bytes);\n      return /^[\\x20-\\x7E\\s]*$/.test(decoded);\n    } catch {\n      return false;\n    }\n  }\n\n  private assessServiceRisk(serviceName: string): 'Critical' | 'High' | 'Medium' | 'Low' {\n    if (serviceName.includes('DFU') || serviceName.includes('File Transfer')) {\n      return 'Critical';\n    }\n    if (serviceName.includes('Human Interface') || \n        serviceName.includes('Object Push') ||\n        serviceName.includes('Audio Source')) {\n      return 'High';\n    }\n    if (serviceName.includes('Generic Access') || \n        serviceName.includes('Generic Attribute') ||\n        serviceName.includes('Device Information') ||\n        serviceName.includes('Audio Sink')) {\n      return 'Medium';\n    }\n    return 'Low';\n  }\n\n  private verifyServicePattern(uuid: string): 'verified' | 'unknown' | 'suspicious' {\n    const knownServices = [\n      '00001800-0000-1000-8000-00805f9b34fb', // Generic Access\n      '00001801-0000-1000-8000-00805f9b34fb', // Generic Attribute\n      '0000180a-0000-1000-8000-00805f9b34fb', // Device Information\n      '0000180f-0000-1000-8000-00805f9b34fb', // Battery Service\n      '00001812-0000-1000-8000-00805f9b34fb', // HID\n      '0000fe59-0000-1000-8000-00805f9b34fb'  // Nordic DFU\n    ];\n\n    if (knownServices.includes(uuid)) {\n      return 'verified';\n    }\n\n    if (uuid.startsWith('0000') && uuid.endsWith('-0000-1000-8000-00805f9b34fb')) {\n      return 'unknown';\n    }\n\n    return 'suspicious';\n  }\n\n  aggregateServiceStatistics(services: ProcessedServiceData[]) {\n    const stats = {\n      totalServices: services.length,\n      totalCharacteristics: services.reduce((sum, service) => sum + service.characteristics.length, 0),\n      riskDistribution: {\n        critical: services.filter(s => s.riskLevel === 'Critical').length,\n        high: services.filter(s => s.riskLevel === 'High').length,\n        medium: services.filter(s => s.riskLevel === 'Medium').length,\n        low: services.filter(s => s.riskLevel === 'Low').length\n      },\n      verificationStatus: {\n        verified: services.filter(s => s.verificationStatus === 'verified').length,\n        unknown: services.filter(s => s.verificationStatus === 'unknown').length,\n        suspicious: services.filter(s => s.verificationStatus === 'suspicious').length\n      },\n      capabilities: {\n        readable: services.reduce((sum, service) => \n          sum + service.characteristics.filter(c => c.readable).length, 0),\n        writable: services.reduce((sum, service) => \n          sum + service.characteristics.filter(c => c.writable).length, 0),\n        notifiable: services.reduce((sum, service) => \n          sum + service.characteristics.filter(c => c.notifiable).length, 0)\n      }\n    };\n\n    return {\n      ...stats,\n      overallRisk: this.calculateOverallRisk(stats.riskDistribution),\n      verificationScore: this.calculateVerificationScore(stats.verificationStatus, stats.totalServices)\n    };\n  }\n\n  private calculateOverallRisk(riskDistribution: Record<string, number>): 'Critical' | 'High' | 'Medium' | 'Low' {\n    if ((riskDistribution.critical || 0) > 0) return 'Critical';\n    if ((riskDistribution.high || 0) > 0) return 'High';\n    if ((riskDistribution.medium || 0) > 0) return 'Medium';\n    return 'Low';\n  }\n\n  private calculateVerificationScore(verificationStatus: Record<string, number>, total: number): number {\n    return Math.round(((verificationStatus.verified || 0) / total) * 100);\n  }\n\n  generateAnalysisReport(\n    services: ProcessedServiceData[],\n    firmwareAnalysis: FirmwareAnalysisResult,\n    securityAssessment: any\n  ) {\n    const stats = this.aggregateServiceStatistics(services);\n    \n    return {\n      timestamp: new Date().toISOString(),\n      deviceInfo: {\n        servicesDiscovered: services.length,\n        verificationScore: stats.verificationScore,\n        overallRisk: stats.overallRisk\n      },\n      firmwareInfo: {\n        version: firmwareAnalysis.version,\n        updateCapable: firmwareAnalysis.updateCapable,\n        otaPatterns: firmwareAnalysis.otaPatterns,\n        dfuPatterns: firmwareAnalysis.dfuPatterns\n      },\n      securityAssessment: {\n        riskLevel: securityAssessment.riskLevel,\n        recommendations: securityAssessment.recommendations,\n        criticalServices: services.filter(s => s.riskLevel === 'Critical').map(s => s.name)\n      },\n      statistics: stats,\n      services: services.map(service => ({\n        name: service.name,\n        uuid: service.uuid,\n        riskLevel: service.riskLevel,\n        verificationStatus: service.verificationStatus,\n        characteristicCount: service.characteristics.length,\n        capabilities: {\n          read: service.characteristics.filter(c => c.readable).length,\n          write: service.characteristics.filter(c => c.writable).length,\n          notify: service.characteristics.filter(c => c.notifiable).length\n        }\n      }))\n    };\n  }\n\n  exportToCSV(data: any[], filename: string): void {\n    if (!data || data.length === 0) {\n      console.warn('No data to export');\n      return;\n    }\n\n    const headers = Object.keys(data[0]);\n    const csvContent = [\n      headers.join(','),\n      ...data.map(row => \n        headers.map(header => {\n          const value = row[header];\n          if (value === null || value === undefined) return '';\n          if (typeof value === 'object') return JSON.stringify(value);\n          return `\"${String(value).replace(/\"/g, '\"\"')}\"`;\n        }).join(',')\n      )\n    ].join('\\n');\n\n    this.downloadFile(csvContent, `${filename}.csv`, 'text/csv');\n  }\n\n  exportToJSON(data: any, filename: string): void {\n    const jsonContent = JSON.stringify(data, null, 2);\n    this.downloadFile(jsonContent, `${filename}.json`, 'application/json');\n  }\n\n  private downloadFile(content: string, filename: string, mimeType: string): void {\n    const blob = new Blob([content], { type: mimeType });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = filename;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n  }\n}","import React, { useState, useCallback, useMemo } from 'react';\nimport { SecurityAnalyzer } from '@/services/analysis/SecurityAnalyzer';\nimport { FirmwareAnalyzer } from '@/services/analysis/FirmwareAnalyzer';\nimport { DataProcessor } from '@/utils';\nimport type { \n  ServiceDiscoveryResult, \n  SecurityAssessment,\n  FirmwareAnalysis \n} from '@/types';\nimport './ServiceExplorer.css';\n\ninterface ServiceExplorerProps {\n  services: ServiceDiscoveryResult[];\n  onSecurityAssessment: (assessment: SecurityAssessment) => void;\n  onFirmwareAnalysis: (analysis: FirmwareAnalysis) => void;\n}\n\nexport const ServiceExplorer: React.FC<ServiceExplorerProps> = ({\n  services,\n  onSecurityAssessment,\n  onFirmwareAnalysis\n}) => {\n  const [selectedService, setSelectedService] = useState<string | null>(null);\n  const [analysisComplete, setAnalysisComplete] = useState(false);\n  const [showCharacteristics, setShowCharacteristics] = useState<Record<string, boolean>>({});\n\n  const securityAnalyzer = useMemo(() => SecurityAnalyzer.getInstance(), []);\n  const firmwareAnalyzer = useMemo(() => FirmwareAnalyzer.getInstance(), []);\n  const dataProcessor = useMemo(() => DataProcessor.getInstance(), []);\n\n  const processedServices = useMemo(() => {\n    return dataProcessor.processDiscoveredServices(services);\n  }, [services, dataProcessor]);\n\n  const serviceStats = useMemo(() => {\n    return dataProcessor.aggregateServiceStatistics(processedServices);\n  }, [processedServices, dataProcessor]);\n\n  const handleServiceSelect = useCallback((serviceUuid: string) => {\n    setSelectedService(selectedService === serviceUuid ? null : serviceUuid);\n  }, [selectedService]);\n\n  const toggleCharacteristics = useCallback((serviceUuid: string) => {\n    setShowCharacteristics(prev => ({\n      ...prev,\n      [serviceUuid]: !prev[serviceUuid]\n    }));\n  }, []);\n\n  const runAnalysis = useCallback(async () => {\n    if (services.length === 0) return;\n\n    try {\n      // Mock services for analysis (Web Bluetooth services don't have the exact interface needed)\n      const mockServices = services.map(() => ({} as BluetoothRemoteGATTService));\n\n      // Generate security assessment\n      const securityAssessment = securityAnalyzer.generateSecurityAssessment(mockServices);\n      onSecurityAssessment(securityAssessment);\n\n      // Generate firmware analysis\n      const firmwareAnalysis = await firmwareAnalyzer.analyzeFirmware(mockServices);\n      onFirmwareAnalysis(firmwareAnalysis);\n\n      setAnalysisComplete(true);\n    } catch (error) {\n      console.error('Analysis failed:', error);\n    }\n  }, [services, securityAnalyzer, firmwareAnalyzer, onSecurityAssessment, onFirmwareAnalysis]);\n\n  const getRiskColor = (riskLevel: string) => {\n    switch (riskLevel) {\n      case 'Critical': return '#e53e3e';\n      case 'High': return '#dd6b20';\n      case 'Medium': return '#d69e2e';\n      case 'Low': return '#38a169';\n      default: return '#718096';\n    }\n  };\n\n  const getVerificationColor = (status: string) => {\n    switch (status) {\n      case 'verified': return '#38a169';\n      case 'unknown': return '#d69e2e';\n      case 'suspicious': return '#e53e3e';\n      default: return '#718096';\n    }\n  };\n\n  if (services.length === 0) {\n    return (\n      <div className=\"service-explorer\">\n        <div className=\"no-services\">\n          <div className=\"no-services-icon\">üîç</div>\n          <p>No services discovered</p>\n          <small>Connect to a device first to explore its services</small>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"service-explorer\">\n      <div className=\"explorer-header\">\n        <h3>Service Explorer</h3>\n        <div className=\"header-actions\">\n          <button \n            className=\"analysis-button\"\n            onClick={runAnalysis}\n            disabled={analysisComplete}\n          >\n            {analysisComplete ? '‚úÖ Analysis Complete' : 'üî¨ Run Analysis'}\n          </button>\n        </div>\n      </div>\n\n      <div className=\"service-stats\">\n        <div className=\"stat-card\">\n          <div className=\"stat-value\">{serviceStats.totalServices}</div>\n          <div className=\"stat-label\">Services</div>\n        </div>\n        <div className=\"stat-card\">\n          <div className=\"stat-value\">{serviceStats.totalCharacteristics}</div>\n          <div className=\"stat-label\">Characteristics</div>\n        </div>\n        <div className=\"stat-card\">\n          <div \n            className=\"stat-value\" \n            style={{ color: getRiskColor(serviceStats.overallRisk) }}\n          >\n            {serviceStats.overallRisk}\n          </div>\n          <div className=\"stat-label\">Risk Level</div>\n        </div>\n        <div className=\"stat-card\">\n          <div className=\"stat-value\">{serviceStats.verificationScore}%</div>\n          <div className=\"stat-label\">Verified</div>\n        </div>\n      </div>\n\n      <div className=\"services-list\">\n        {processedServices.map((service) => (\n          <div key={service.uuid} className=\"service-item\">\n            <div \n              className=\"service-header\"\n              onClick={() => handleServiceSelect(service.uuid)}\n            >\n              <div className=\"service-info\">\n                <div className=\"service-name\">\n                  {service.name}\n                </div>\n                <div className=\"service-uuid\">\n                  {service.uuid}\n                </div>\n              </div>\n              <div className=\"service-badges\">\n                <span \n                  className=\"risk-badge\"\n                  style={{ \n                    backgroundColor: getRiskColor(service.riskLevel),\n                    color: 'white'\n                  }}\n                >\n                  {service.riskLevel}\n                </span>\n                <span \n                  className=\"verification-badge\"\n                  style={{ \n                    backgroundColor: getVerificationColor(service.verificationStatus),\n                    color: 'white'\n                  }}\n                >\n                  {service.verificationStatus}\n                </span>\n                <span className=\"characteristic-count\">\n                  {service.characteristics.length} chars\n                </span>\n              </div>\n              <div className=\"service-expand\">\n                {selectedService === service.uuid ? '‚ñº' : '‚ñ∂'}\n              </div>\n            </div>\n\n            {selectedService === service.uuid && (\n              <div className=\"service-details\">\n                <div className=\"service-actions\">\n                  <button \n                    className=\"toggle-chars-button\"\n                    onClick={() => toggleCharacteristics(service.uuid)}\n                  >\n                    {showCharacteristics[service.uuid] ? \n                      'Hide Characteristics' : \n                      `Show ${service.characteristics.length} Characteristics`}\n                  </button>\n                </div>\n\n                {showCharacteristics[service.uuid] && (\n                  <div className=\"characteristics-list\">\n                    {service.characteristics.map((characteristic) => (\n                      <div key={characteristic.uuid} className=\"characteristic-item\">\n                        <div className=\"characteristic-header\">\n                          <span className=\"characteristic-uuid\">\n                            {characteristic.uuid}\n                          </span>\n                          <div className=\"characteristic-properties\">\n                            {characteristic.properties.map(prop => (\n                              <span key={prop} className={`property-badge ${prop}`}>\n                                {prop}\n                              </span>\n                            ))}\n                          </div>\n                        </div>\n                        \n                        {characteristic.value && (\n                          <div className=\"characteristic-value\">\n                            <strong>Value:</strong> \n                            <code>{JSON.stringify(characteristic.value)}</code>\n                          </div>\n                        )}\n\n                        <div className=\"characteristic-capabilities\">\n                          {characteristic.readable && (\n                            <span className=\"capability readable\">üìñ Readable</span>\n                          )}\n                          {characteristic.writable && (\n                            <span className=\"capability writable\">‚úèÔ∏è Writable</span>\n                          )}\n                          {characteristic.notifiable && (\n                            <span className=\"capability notifiable\">üîî Notifiable</span>\n                          )}\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n        ))}\n      </div>\n\n      {analysisComplete && (\n        <div className=\"analysis-summary\">\n          <h4>Analysis Complete</h4>\n          <div className=\"analysis-results\">\n            <div className=\"result-item\">\n              <span className=\"result-label\">Security Assessment:</span>\n              <span className=\"result-value\">Generated</span>\n            </div>\n            <div className=\"result-item\">\n              <span className=\"result-label\">Firmware Analysis:</span>\n              <span className=\"result-value\">Generated</span>\n            </div>\n            <div className=\"result-item\">\n              <span className=\"result-label\">Risk Distribution:</span>\n              <span className=\"result-value\">\n                üî¥ {serviceStats.riskDistribution.critical} Critical, \n                üü† {serviceStats.riskDistribution.high} High, \n                üü° {serviceStats.riskDistribution.medium} Medium, \n                üü¢ {serviceStats.riskDistribution.low} Low\n              </span>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};","import { useState, useCallback } from 'react';\nimport { DeviceScanner } from './components/DeviceScanner';\nimport { ConnectionManager } from './components/ConnectionManager';\nimport { ServiceExplorer } from './components/ServiceExplorer';\nimport type { \n  BluetoothDevice, \n  DeviceConnectionState, \n  ServiceDiscoveryResult,\n  SecurityAssessment,\n  FirmwareAnalysis,\n  AppState \n} from './types';\nimport './App.css';\n\nconst initialAppState: AppState = {\n  connectionState: {\n    connected: false,\n    connecting: false,\n    device: null,\n    services: [],\n    characteristics: new Map(),\n    error: null\n  },\n  discoveredServices: [],\n  processedServices: [],\n  securityAssessment: null,\n  firmwareAnalysis: null,\n  isScanning: false,\n  availableDevices: []\n};\n\nfunction App() {\n  const [appState, setAppState] = useState<AppState>(initialAppState);\n  const [selectedDevice, setSelectedDevice] = useState<BluetoothDevice | null>(null);\n  const [activeTab, setActiveTab] = useState<'scanner' | 'connection' | 'services'>('scanner');\n\n  const handleDeviceSelected = useCallback((device: BluetoothDevice) => {\n    setSelectedDevice(device);\n    setAppState(prev => ({\n      ...prev,\n      availableDevices: prev.availableDevices.includes(device) ? \n        prev.availableDevices : [...prev.availableDevices, device]\n    }));\n    setActiveTab('connection');\n  }, []);\n\n  const handleScanStateChange = useCallback((scanning: boolean) => {\n    setAppState(prev => ({\n      ...prev,\n      isScanning: scanning\n    }));\n  }, []);\n\n  const handleConnectionStateChange = useCallback((connectionState: DeviceConnectionState) => {\n    setAppState(prev => ({\n      ...prev,\n      connectionState\n    }));\n    \n    if (connectionState.connected) {\n      setActiveTab('services');\n    }\n  }, []);\n\n  const handleServicesDiscovered = useCallback((services: ServiceDiscoveryResult[]) => {\n    setAppState(prev => ({\n      ...prev,\n      discoveredServices: services\n    }));\n  }, []);\n\n  const handleSecurityAssessment = useCallback((assessment: SecurityAssessment) => {\n    setAppState(prev => ({\n      ...prev,\n      securityAssessment: assessment\n    }));\n  }, []);\n\n  const handleFirmwareAnalysis = useCallback((analysis: FirmwareAnalysis) => {\n    setAppState(prev => ({\n      ...prev,\n      firmwareAnalysis: analysis\n    }));\n  }, []);\n\n  const handleTabChange = useCallback((tab: 'scanner' | 'connection' | 'services') => {\n    setActiveTab(tab);\n  }, []);\n\n  const isTabEnabled = (tab: string) => {\n    switch (tab) {\n      case 'scanner':\n        return true;\n      case 'connection':\n        return selectedDevice !== null;\n      case 'services':\n        return appState.connectionState.connected;\n      default:\n        return false;\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <header className=\"app-header\">\n        <div className=\"header-content\">\n          <h1>\n            <span className=\"app-icon\">üìπ</span>\n            Blackmagic Bluetooth Interface\n          </h1>\n          <div className=\"header-status\">\n            {selectedDevice && (\n              <div className=\"device-status\">\n                <span className=\"device-name\">{selectedDevice.name || 'Unknown Device'}</span>\n                <span className={`connection-indicator ${appState.connectionState.connected ? 'connected' : 'disconnected'}`}>\n                  {appState.connectionState.connected ? 'üü¢ Connected' : 'üî¥ Disconnected'}\n                </span>\n              </div>\n            )}\n          </div>\n        </div>\n      </header>\n\n      <nav className=\"app-nav\">\n        <button \n          className={`nav-tab ${activeTab === 'scanner' ? 'active' : ''}`}\n          onClick={() => handleTabChange('scanner')}\n          disabled={!isTabEnabled('scanner')}\n        >\n          <span className=\"tab-icon\">üîç</span>\n          Device Scanner\n        </button>\n        <button \n          className={`nav-tab ${activeTab === 'connection' ? 'active' : ''}`}\n          onClick={() => handleTabChange('connection')}\n          disabled={!isTabEnabled('connection')}\n        >\n          <span className=\"tab-icon\">üîó</span>\n          Connection\n        </button>\n        <button \n          className={`nav-tab ${activeTab === 'services' ? 'active' : ''}`}\n          onClick={() => handleTabChange('services')}\n          disabled={!isTabEnabled('services')}\n        >\n          <span className=\"tab-icon\">‚öôÔ∏è</span>\n          Services\n        </button>\n      </nav>\n\n      <main className=\"app-main\">\n        {activeTab === 'scanner' && (\n          <DeviceScanner\n            onDeviceSelected={handleDeviceSelected}\n            isScanning={appState.isScanning}\n            onScanStateChange={handleScanStateChange}\n          />\n        )}\n\n        {activeTab === 'connection' && (\n          <ConnectionManager\n            device={selectedDevice}\n            onConnectionStateChange={handleConnectionStateChange}\n            onServicesDiscovered={handleServicesDiscovered}\n          />\n        )}\n\n        {activeTab === 'services' && (\n          <ServiceExplorer\n            services={appState.discoveredServices}\n            onSecurityAssessment={handleSecurityAssessment}\n            onFirmwareAnalysis={handleFirmwareAnalysis}\n          />\n        )}\n      </main>\n\n      <footer className=\"app-footer\">\n        <div className=\"footer-content\">\n          <div className=\"footer-info\">\n            <span>Blackmagic Bluetooth Interface v1.0.0</span>\n            <span>‚Ä¢</span>\n            <span>Built with React + TypeScript</span>\n            <span>‚Ä¢</span>\n            <span>Web Bluetooth API</span>\n          </div>\n          <div className=\"footer-stats\">\n            {appState.connectionState.connected && (\n              <>\n                <span>{appState.discoveredServices.length} Services</span>\n                <span>‚Ä¢</span>\n                <span>{appState.connectionState.characteristics.size} Characteristics</span>\n                {appState.securityAssessment && (\n                  <>\n                    <span>‚Ä¢</span>\n                    <span>Risk: {appState.securityAssessment.riskLevel}</span>\n                  </>\n                )}\n              </>\n            )}\n          </div>\n        </div>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;","import { StrictMode } from 'react';\nimport { createRoot } from 'react-dom/client';\nimport App from './App';\nimport './App.css';\n\nconst root = createRoot(document.getElementById('root')!);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);"],"names":["f","require$$0","k","l","m","n","p","q","c","a","g","b","d","e","h","reactJsxRuntime_production_min","jsxRuntimeModule","createRoot","DeviceScanner","onDeviceSelected","isScanning","onScanStateChange","availableDevices","setAvailableDevices","useState","error","setError","adapter","WebBluetoothAdapter","handleScan","useCallback","result","device","prev","err","handleDeviceSelect","clearError","jsxs","jsx","Fragment","_a","ConnectionManager","onConnectionStateChange","onServicesDiscovered","connectionState","setConnectionState","discoveryProgress","setDiscoveryProgress","useEffect","handleConnect","connectResult","servicesResult","handleDisconnect","_SecurityAnalyzer","__publicField","services","serviceNames","s","riskLevels","highestRisk","recommendations","risks","serviceName","critical","high","medium","riskValues","hasDFU","name","hasFileTransfer","hasHID","hasObjectPush","hasAudioSource","serviceUuid","service","VERIFIED_SERVICE_UUIDS","riskLevel","threats","mitigations","assessment","serviceDetails","criticalServices","highRiskServices","mediumRiskServices","lowRiskServices","operation","op","uuid","SecurityAnalyzer","_FirmwareAnalyzer","cacheKey","analysis","deviceInfoService","firmwareChar","value","total","VERIFIED_HCI_COMMANDS","command","VERIFIED_BLUETOOTH_SIGNATURES","signature","memoryAnalyses","patterns","discoveredUuids","expectedUuids","matches","totalOccurrences","FirmwareAnalyzer","_DataProcessor","char","bytes","decoded","stats","sum","riskDistribution","verificationStatus","firmwareAnalysis","securityAssessment","data","filename","headers","csvContent","row","header","jsonContent","content","mimeType","blob","url","link","DataProcessor","ServiceExplorer","onSecurityAssessment","onFirmwareAnalysis","selectedService","setSelectedService","analysisComplete","setAnalysisComplete","showCharacteristics","setShowCharacteristics","securityAnalyzer","useMemo","firmwareAnalyzer","dataProcessor","processedServices","serviceStats","handleServiceSelect","toggleCharacteristics","runAnalysis","mockServices","getRiskColor","getVerificationColor","status","characteristic","prop","initialAppState","App","appState","setAppState","selectedDevice","setSelectedDevice","activeTab","setActiveTab","handleDeviceSelected","handleScanStateChange","scanning","handleConnectionStateChange","handleServicesDiscovered","handleSecurityAssessment","handleFirmwareAnalysis","handleTabChange","tab","isTabEnabled","root","StrictMode"],"mappings":"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","x_google_ignoreList":[0,1,2]}